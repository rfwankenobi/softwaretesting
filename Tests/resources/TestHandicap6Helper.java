// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>TestHandicap6</b><br>
 * Generated     : <b>2018/11/18 7:36:35 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 10 amd64 10.0 <br>
 * 
 * @since  November 18, 2018
 * @author Rodolfo
 */
public abstract class TestHandicap6Helper extends RationalTestScript
{
	/**
	 * Finish: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Finish
	 * 		.classIndex : 1
	 */
	protected GuiTestObject finish() 
	{
		return new GuiTestObject(
                        getMappedTestObject("finish"));
	}
	/**
	 * Finish: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Finish
	 * 		.classIndex : 1
	 */
	protected GuiTestObject finish(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("finish"), anchor, flags);
	}
	
	/**
	 * Guest: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Guest
	 * 		.classIndex : 2
	 */
	protected GuiTestObject guest() 
	{
		return new GuiTestObject(
                        getMappedTestObject("guest"));
	}
	/**
	 * Guest: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Guest
	 * 		.classIndex : 2
	 */
	protected GuiTestObject guest(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("guest"), anchor, flags);
	}
	
	/**
	 * Input: with default state.
	 *		.captionText : Input
	 * 		.class : javax.swing.JDialog
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject input() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("input"));
	}
	/**
	 * Input: with specific test context and state.
	 *		.captionText : Input
	 * 		.class : javax.swing.JDialog
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject input(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("input"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next() 
	{
		return new GuiTestObject(
                        getMappedTestObject("next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("next"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("next2"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("next2"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"), anchor, flags);
	}
	
	/**
	 * SecurityDisplayFrame: with default state.
	 *		.captionText : 
	 * 		.class : client.security.SecurityDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject securityDisplayFrame() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("securityDisplayFrame"));
	}
	/**
	 * SecurityDisplayFrame: with specific test context and state.
	 *		.captionText : 
	 * 		.class : client.security.SecurityDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject securityDisplayFrame(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("securityDisplayFrame"), anchor, flags);
	}
	
	/**
	 * SpotDisplayFrame: with default state.
	 *		.captionText : 
	 * 		.class : client.parkingdisplay.SpotDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject spotDisplayFrame() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("spotDisplayFrame"));
	}
	/**
	 * SpotDisplayFrame: with specific test context and state.
	 *		.captionText : 
	 * 		.class : client.parkingdisplay.SpotDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject spotDisplayFrame(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("spotDisplayFrame"), anchor, flags);
	}
	
	/**
	 * WelcomeDisplay: with default state.
	 *		.captionText : 
	 * 		.class : client.maindisplay.WelcomeDisplay
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject welcomeDisplay() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("welcomeDisplay"));
	}
	/**
	 * WelcomeDisplay: with specific test context and state.
	 *		.captionText : 
	 * 		.class : client.maindisplay.WelcomeDisplay
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject welcomeDisplay(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("welcomeDisplay"), anchor, flags);
	}
	
	

	protected TestHandicap6Helper()
	{
		setScriptName("TestHandicap6");
	}
	
}

