// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>PLIS06</b><br>
 * Generated     : <b>2018/10/13 1:12:13 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 10 amd64 10.0 <br>
 * 
 * @since  October 13, 2018
 * @author RexAevum
 */
public abstract class PLIS06Helper extends RationalTestScript
{
	/**
	 * Finish: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Finish
	 * 		.classIndex : 1
	 */
	protected GuiTestObject finish() 
	{
		return new GuiTestObject(
                        getMappedTestObject("finish"));
	}
	/**
	 * Finish: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Finish
	 * 		.classIndex : 1
	 */
	protected GuiTestObject finish(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("finish"), anchor, flags);
	}
	
	/**
	 * Input: with default state.
	 *		.captionText : Input
	 * 		.class : javax.swing.JDialog
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject input() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("input"));
	}
	/**
	 * Input: with specific test context and state.
	 *		.captionText : Input
	 * 		.class : javax.swing.JDialog
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject input(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("input"), anchor, flags);
	}
	
	/**
	 * JTextField: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject jTextField() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("jTextField"));
	}
	/**
	 * JTextField: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject jTextField(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("jTextField"), anchor, flags);
	}
	
	/**
	 * JTextField: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject jTextField2() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("jTextField2"));
	}
	/**
	 * JTextField: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject jTextField2(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("jTextField2"), anchor, flags);
	}
	
	/**
	 * Leave: with default state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : Parking Spot #312 
	 * 		accessibleContext.accessibleName : Leave
	 * 		.classIndex : 0
	 */
	protected GuiTestObject leave() 
	{
		return new GuiTestObject(
                        getMappedTestObject("leave"));
	}
	/**
	 * Leave: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : Parking Spot #312 
	 * 		accessibleContext.accessibleName : Leave
	 * 		.classIndex : 0
	 */
	protected GuiTestObject leave(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("leave"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next() 
	{
		return new GuiTestObject(
                        getMappedTestObject("next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("next"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("next2"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Next
	 * 		.classIndex : 1
	 */
	protected GuiTestObject next2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("next2"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok2"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok2"), anchor, flags);
	}
	
	/**
	 * PleaseEnterTheParkingSpotNumberOfTheDisplay: with default state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$MultiplexingTextField
	 * 		.priorLabel : Please enter the parking spot number of the display
	 * 		name : OptionPane.textField
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject pleaseEnterTheParkingSpotNumbe() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("pleaseEnterTheParkingSpotNumbe"));
	}
	/**
	 * PleaseEnterTheParkingSpotNumberOfTheDisplay: with specific test context and state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$MultiplexingTextField
	 * 		.priorLabel : Please enter the parking spot number of the display
	 * 		name : OptionPane.textField
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject pleaseEnterTheParkingSpotNumbe(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("pleaseEnterTheParkingSpotNumbe"), anchor, flags);
	}
	
	/**
	 * ScanID: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Scan ID
	 * 		.classIndex : 0
	 */
	protected GuiTestObject scanID() 
	{
		return new GuiTestObject(
                        getMappedTestObject("scanID"));
	}
	/**
	 * ScanID: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Scan ID
	 * 		.classIndex : 0
	 */
	protected GuiTestObject scanID(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("scanID"), anchor, flags);
	}
	
	/**
	 * ScanID: with default state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : Parking Spot Status: Unassigned
	 * 		accessibleContext.accessibleName : Scan ID
	 * 		.classIndex : 0
	 */
	protected GuiTestObject scanID2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("scanID2"));
	}
	/**
	 * ScanID: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : Parking Spot Status: Unassigned
	 * 		accessibleContext.accessibleName : Scan ID
	 * 		.classIndex : 0
	 */
	protected GuiTestObject scanID2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("scanID2"), anchor, flags);
	}
	
	/**
	 * SecurityDisplayFrame: with default state.
	 *		.captionText : 
	 * 		.class : client.security.SecurityDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject securityDisplayFrame() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("securityDisplayFrame"));
	}
	/**
	 * SecurityDisplayFrame: with specific test context and state.
	 *		.captionText : 
	 * 		.class : client.security.SecurityDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject securityDisplayFrame(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("securityDisplayFrame"), anchor, flags);
	}
	
	/**
	 * SpotDisplayFrame: with default state.
	 *		.captionText : 
	 * 		.class : client.parkingdisplay.SpotDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject spotDisplayFrame() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("spotDisplayFrame"));
	}
	/**
	 * SpotDisplayFrame: with specific test context and state.
	 *		.captionText : 
	 * 		.class : client.parkingdisplay.SpotDisplayFrame
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject spotDisplayFrame(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("spotDisplayFrame"), anchor, flags);
	}
	
	/**
	 * ThisMessageWillBeStoredInLogFile: with default state.
	 *		text : This message will be stored in log file.
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : This message will be stored in log file.
	 * 		name : OptionPane.label
	 * 		.classIndex : 1
	 */
	protected GuiTestObject thisMessageWillBeStoredInLogFi() 
	{
		return new GuiTestObject(
                        getMappedTestObject("thisMessageWillBeStoredInLogFi"));
	}
	/**
	 * ThisMessageWillBeStoredInLogFile: with specific test context and state.
	 *		text : This message will be stored in log file.
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : This message will be stored in log file.
	 * 		name : OptionPane.label
	 * 		.classIndex : 1
	 */
	protected GuiTestObject thisMessageWillBeStoredInLogFi(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("thisMessageWillBeStoredInLogFi"), anchor, flags);
	}
	
	/**
	 * WelcomeDisplay: with default state.
	 *		.captionText : 
	 * 		.class : client.maindisplay.WelcomeDisplay
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject welcomeDisplay() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("welcomeDisplay"));
	}
	/**
	 * WelcomeDisplay: with specific test context and state.
	 *		.captionText : 
	 * 		.class : client.maindisplay.WelcomeDisplay
	 * 		accessibleContext.accessibleName : 
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject welcomeDisplay(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("welcomeDisplay"), anchor, flags);
	}
	
	/**
	 * WrongUserDetectedOnParkingSpot312: with default state.
	 *		text : Wrong user detected on parking spot #312
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Wrong user detected on parking spot #312
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject wrongUserDetectedOnParkingSpot() 
	{
		return new GuiTestObject(
                        getMappedTestObject("wrongUserDetectedOnParkingSpot"));
	}
	/**
	 * WrongUserDetectedOnParkingSpot312: with specific test context and state.
	 *		text : Wrong user detected on parking spot #312
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Wrong user detected on parking spot #312
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject wrongUserDetectedOnParkingSpot(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("wrongUserDetectedOnParkingSpot"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point wrongParking object in the SUT.
	 */
	protected IFtVerificationPoint wrongParkingVP() 
	{
		return vp("wrongParking");
	}
	protected IFtVerificationPoint wrongParkingVP(TestObject anchor)
	{
		return vp("wrongParking", anchor);
	}
	
	

	protected PLIS06Helper()
	{
		setScriptName("PLIS06");
	}
	
}

